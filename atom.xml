<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>luozha</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.daluozha.cn/"/>
  <updated>2022-05-07T02:17:04.617Z</updated>
  <id>http://www.daluozha.cn/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在 vite 中批量导入模块</title>
    <link href="http://www.daluozha.cn/2022/05/05/%E5%A6%82%E4%BD%95%E5%9C%A8-vite-%E4%B8%AD%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97/"/>
    <id>http://www.daluozha.cn/2022/05/05/如何在-vite-中批量导入模块/</id>
    <published>2022-05-05T15:33:42.000Z</published>
    <updated>2022-05-07T02:17:04.617Z</updated>
    
    <content type="html"><![CDATA[<p>之前批量导入用的是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require.context(directory, useSubdirectories = false, regExp = /^\.\//)</span><br></pre></td></tr></table></figure><p>一共接收三个参数：1.传入搜索的目录 2.一个Boolean值，表示是否加载子目录 3.一个正则表达式</p><p>但在 vite 中不支持使用 require，故改用 <strong>import.meta.glob</strong> 和 <strong>import.meta.globEager</strong></p><blockquote><p>import.meta.glob 为过动态导入，构建时，会分离为独立的 chunk<br>import.meta.globEager 为直接引入</p></blockquote><p>参考：</p><ul><li><p>&lt;<a href="https://zhuanlan.zhihu.com/p/443175985" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/443175985</a> &gt;</p></li><li><p>&lt;<a href="https://juejin.cn/post/6951557699079569422" target="_blank" rel="noopener">https://juejin.cn/post/6951557699079569422</a> &gt;</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前批量导入用的是&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;cod
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shell 脚本入门</title>
    <link href="http://www.daluozha.cn/2022/04/19/Shell-%E8%84%9A%E6%9C%AC%E5%85%A5%E9%97%A8/"/>
    <id>http://www.daluozha.cn/2022/04/19/Shell-脚本入门/</id>
    <published>2022-04-18T19:29:59.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<h1>Shell 脚本入门</h1><p>&lt;<a href="https://www.runoob.com/w3cnote/shell-quick-start.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/shell-quick-start.html</a> &gt;<br>&lt;<a href="https://github.com/qinjx/30min_guides/blob/master/shell.md" target="_blank" rel="noopener">https://github.com/qinjx/30min_guides/blob/master/shell.md</a> &gt;</p><p>还可以用 JavaScript 来写 shell 脚本，参考 &lt;<a href="https://segmentfault.com/a/1190000041295297" target="_blank" rel="noopener">https://segmentfault.com/a/1190000041295297</a> &gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Shell 脚本入门&lt;/h1&gt;
&lt;p&gt;&amp;lt;&lt;a href=&quot;https://www.runoob.com/w3cnote/shell-quick-start.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.runoob
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue3 One Piece 初探</title>
    <link href="http://www.daluozha.cn/2022/03/19/vue3/"/>
    <id>http://www.daluozha.cn/2022/03/19/vue3/</id>
    <published>2022-03-19T13:55:10.000Z</published>
    <updated>2022-05-18T15:12:37.580Z</updated>
    
    <content type="html"><![CDATA[<center>    <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);transform:scale(0.5);" src="https://static.vue-js.com/6280b990-ff19-11ea-85f6-6fac77c0c9b3.png"></center><h3 id="vue2-与-vue3-响应式原理的区别"><a class="header-anchor" href="#vue2-与-vue3-响应式原理的区别">🌘</a>Vue2 与 Vue3 响应式原理的区别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// Vue2</span><br><span class="line">Object.defineProperty(data, &apos;count&apos;, &#123;</span><br><span class="line">    get() &#123;&#125;,</span><br><span class="line">    set() &#123;&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// Vue3</span><br><span class="line">new Proxy(data, &#123;</span><br><span class="line">    get(key) &#123;&#125;,</span><br><span class="line">    set(key, value) &#123;&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="sth-else"><a class="header-anchor" href="#sth-else">🌘</a>sth else</h3><ul><li>setup scripts : &lt;<a href="https://fe-blog.workplus.io/vue3-script-setup" target="_blank" rel="noopener">https://fe-blog.workplus.io/vue3-script-setup</a> &gt;</li><li>选项式 vs 组合式: &lt;<a href="https://vuejs.org/guide/introduction.html#api-styles" target="_blank" rel="noopener">https://vuejs.org/guide/introduction.html#api-styles</a> &gt;</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);transform:scale(
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TypeScript 学习参考</title>
    <link href="http://www.daluozha.cn/2021/06/15/typescript/"/>
    <id>http://www.daluozha.cn/2021/06/15/typescript/</id>
    <published>2021-06-15T01:34:18.000Z</published>
    <updated>2022-05-20T17:23:03.014Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为什么要使用-typescript"><a class="header-anchor" href="#为什么要使用-typescript">🌘</a>为什么要使用 TypeScript</h3><ul><li>类型推演与类型匹配</li><li>开发编译时报错</li><li>极大程度的避免了低级错误</li><li>支持 JavaScript 最新特性(包含 ES 6/7/8)</li></ul><h3 id="what-s-new"><a class="header-anchor" href="#what-s-new">🌘</a>What’s new ?</h3><ul><li>元组</li><li>interface 接口</li><li>类型推论、联合类型、类型断言</li><li>枚举 Enum</li><li>范型 Generics</li><li>类型别名、字面量、交叉类型</li></ul><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">例子</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">number</td><td style="text-align:center">1, -33, 2.5</td><td style="text-align:center">任意数字</td></tr><tr><td style="text-align:center">string</td><td style="text-align:center">‘hi’, “hi”</td><td style="text-align:center">任意字符串</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">True, false</td><td style="text-align:center">布尔值</td></tr><tr><td style="text-align:center">字面量</td><td style="text-align:center">其本身</td><td style="text-align:center">限制变量的值就是该字面量的值</td></tr><tr><td style="text-align:center">any</td><td style="text-align:center">*</td><td style="text-align:center">任意类型，对该变量关闭 ts 类型检测；any 类型可以赋值给任意变量；声明变量如果不指定类型，ts 解析器会自动判断变量的类型为 any</td></tr><tr><td style="text-align:center">unknown</td><td style="text-align:center">*</td><td style="text-align:center">类型安全的 any；unknown 类型不可以赋值给任意变量，除非使用<strong>类型断言</strong> as 或 &lt;&gt;</td></tr><tr><td style="text-align:center">void</td><td style="text-align:center">空值(undefined)</td><td style="text-align:center">没有值(或 undefined)，主要用于函数返回值</td></tr><tr><td style="text-align:center">never</td><td style="text-align:center">没有值</td><td style="text-align:center">不能是任何值；用于函数中表示永远不会返回结果，例如 throw new Error()</td></tr><tr><td style="text-align:center">object</td><td style="text-align:center">{}</td><td style="text-align:center">任意的 js 对象</td></tr><tr><td style="text-align:center">array</td><td style="text-align:center">[]</td><td style="text-align:center">任意的 js 数组，类型声明：类型[] 或 Array&lt;类型&gt;</td></tr><tr><td style="text-align:center">tuple</td><td style="text-align:center">[4, 5]</td><td style="text-align:center">元组，ts 新增类型，固定长度数组，语法：[类型 [,类型…]]</td></tr><tr><td style="text-align:center">enum</td><td style="text-align:center">enum{A, B}</td><td style="text-align:center">枚举， ts 新增类型</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 直接使用字面量进行类型声明</span><br><span class="line">let person : &quot;male&quot; | &quot;female&quot; // 联合类型</span><br></pre></td></tr></table></figure><p>构造器的一个语法糖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">    constructor(public name: string, public age: number) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 等价于</span><br><span class="line">class Person &#123;</span><br><span class="line">    name: string</span><br><span class="line">    age: number</span><br><span class="line">    constructor(name: string, age: number) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="interface-和-type-区别"><a class="header-anchor" href="#interface-和-type-区别">🌘</a>interface 和 type 区别</h3><p>一句话总结：能用 interface 就用 interface，不行再用 type<br>详见 &lt;<a href="https://juejin.cn/post/6844903749501059085" target="_blank" rel="noopener">https://juejin.cn/post/6844903749501059085</a> &gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;为什么要使用-typescript&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#为什么要使用-typescript&quot;&gt;🌘&lt;/a&gt;为什么要使用 TypeScript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;类型推演与类型匹配&lt;/li&gt;
&lt;li&gt;开发编译时
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React &amp; Redux 入坑</title>
    <link href="http://www.daluozha.cn/2021/06/07/react/"/>
    <id>http://www.daluozha.cn/2021/06/07/react/</id>
    <published>2021-06-07T15:49:05.000Z</published>
    <updated>2022-04-20T09:48:51.710Z</updated>
    
    <content type="html"><![CDATA[<h1>React.js</h1><p>在学习 React 的过程中，记录了一些相关的笔记和知识点</p><p>代码参考：&lt;<a href="https://github.com/daluozha/BEEMO" target="_blank" rel="noopener">https://github.com/daluozha/BEEMO</a> &gt;</p><h2 id="react-的一些特点"><a class="header-anchor" href="#react-的一些特点">🌘</a>React 的一些特点</h2><ul><li>声名式开发(对应：命令式开发)</li><li>可以与其他框架并存(只控制了指定挂载的 div 标签的渲染)</li><li>组件化</li><li>单向数据流</li><li>视图层框架(大型数据通信需要借助别的框架)</li><li>函数式编程(方便自动化测试)</li></ul><h2 id="react-数据视图更新原理"><a class="header-anchor" href="#react-数据视图更新原理">🌘</a>React 数据视图更新原理</h2><ol><li>state 数据</li><li>JSX 模板</li><li>数据 + 模板 生成虚拟 DOM (虚拟 DOM 就是一个 JS 对象，用它来描述真实的 DOM)，损耗了少许性能，获得[‘div’, {id: ‘abc’}, [‘span’, {}, ‘hello world’]]</li><li>用虚拟 DOM 的结构生成真实的 DOM，来显示 <code>&lt;div id='abc'&gt;&lt;span&gt;hello world&lt;/span&gt;&lt;/div&gt;</code></li><li>state 发生变化</li><li>数据 + 模板生成新的虚拟DOM（相比直接更换真实DOM，极大的提升了性能）[‘div’, {id: ‘abc’}, [‘span’, {}, ‘bye bye’]]</li><li>比较原始虚拟 DOM 和新的虚拟 DOM 的区别，找到区别是 span 中的内容</li><li>直接操作 DOM，改变 span 中的内容</li></ol><h2 id="redux-工作流程"><a class="header-anchor" href="#redux-工作流程">🌘</a>Redux 工作流程</h2><center>    <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://raw.githubusercontent.com/daluozha/MyPostImage/master/Redux-Flow.png">    <div style="color:orange; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">Redux Flow</div></center><h2 id="redux-设计和使用的三项原则"><a class="header-anchor" href="#redux-设计和使用的三项原则">🌘</a>Redux 设计和使用的三项原则</h2><ol><li>store 必须是唯一的</li><li>只有 store 能改变自己的内容，Reducer 应该深拷贝一份 state 修改完毕之后再 return 这份 state</li><li>Reducer 必须是纯函数(纯函数指的是：给定固定的输入，就一定会有固定的输出，而且不会有任何的副作用)</li></ol><h2 id="redux-的核心-api"><a class="header-anchor" href="#redux-的核心-api">🌘</a>Redux 的核心 API</h2><ul><li>createStore</li><li>store.dispatch</li><li>store.getState</li><li>store.subscribe</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;React.js&lt;/h1&gt;
&lt;p&gt;在学习 React 的过程中，记录了一些相关的笔记和知识点&lt;/p&gt;
&lt;p&gt;代码参考：&amp;lt;&lt;a href=&quot;https://github.com/daluozha/BEEMO&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
    
      <category term="Reactjs" scheme="http://www.daluozha.cn/tags/Reactjs/"/>
    
  </entry>
  
  <entry>
    <title>Vue 2.x 响应式原理</title>
    <link href="http://www.daluozha.cn/2021/05/25/vue-reactive/"/>
    <id>http://www.daluozha.cn/2021/05/25/vue-reactive/</id>
    <published>2021-05-24T19:05:47.000Z</published>
    <updated>2022-04-20T09:48:51.710Z</updated>
    
    <content type="html"><![CDATA[<center>    <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://raw.githubusercontent.com/daluozha/MyPostImage/master/mini-vue2.png">    <div style="color:orange; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">Vue 2.x 响应式原理图1</div></center><h3 id="new-vue-做了什么？"><a class="header-anchor" href="#new-vue-做了什么？">🌘</a>new Vue( ) 做了什么？</h3><ul><li>new Vue 之后，在 init 中会对传入的 options 中 data 的每个数据都进行 observe。这个 observe 会使用 object.defineProperty 来对数据进行 getter，setter 重写，然后放在实例vm下。注意，observe 并没有直接改动 data，而是将里面的数据做了一份副本放在了实例下，相当于提升了一个层级。</li><li>observe中会new Dep，这是一个依赖追踪，当get的时候如果全局变量Dep.target不为null时触发dep.depend()  收集依赖；在set的时候触发dep.notify()  依赖触发。</li><li>observe 之后的某个环节（可能是 mount ），会对挂载的 #app 下所有 dom 建立 watcher 实例，new 的过程中首先会将 Dep.target 设置成 this，然后运行一次 update（这里会首先触发 this.get() 来触发 observe，让 observe 的 get 把当前的依赖收集到 dep 的subs 里面），结束的时候设置成 null。</li><li>双向绑定完成，现在改变 input 的 value 或者 data 的数据都会实时更新另一边，实际上 watcher 都会触发，只是有一个是已更新的又赋值了一次。</li></ul><center>    <img style="border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="https://raw.githubusercontent.com/daluozha/MyPostImage/master/mini-vue.jpeg">    <div style="color:orange; border-bottom: 1px solid #d9d9d9;display: inline-block;color: #999;padding: 2px;">Vue 2.x 响应式原理图2</div></center><h3 id="代码参考"><a class="header-anchor" href="#代码参考">🌘</a>代码参考</h3><ul><li>实现一个 mini-vue : <a href="https://github.com/daluozha/RENEKTOY/tree/main/handwriting/mini-vue" target="_blank" rel="noopener">https://github.com/daluozha/RENEKTOY/tree/main/handwriting/mini-vue</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;https://r
      
    
    </summary>
    
    
      <category term="Vuejs" scheme="http://www.daluozha.cn/tags/Vuejs/"/>
    
  </entry>
  
  <entry>
    <title>一些门钥匙</title>
    <link href="http://www.daluozha.cn/2021/05/24/website/"/>
    <id>http://www.daluozha.cn/2021/05/24/website/</id>
    <published>2021-05-24T08:38:08.000Z</published>
    <updated>2022-05-18T07:11:04.239Z</updated>
    
    <content type="html"><![CDATA[<h3 id="github-pages"><a class="header-anchor" href="#github-pages">🌘</a>Github Pages</h3><ul><li>&lt;<a href="https://www.daluozha.cn/gobang/">https://www.daluozha.cn/gobang/</a> &gt;</li></ul><h3 id="技术博客"><a class="header-anchor" href="#技术博客">🌘</a>技术博客</h3><ul><li>张鑫旭 &lt;<a href="https://www.zhangxinxu.com/" target="_blank" rel="noopener">https://www.zhangxinxu.com/</a> &gt;</li><li>阮一峰 &lt;<a href="http://www.ruanyifeng.com" target="_blank" rel="noopener">www.ruanyifeng.com</a>&gt;</li><li>&lt;<a href="https://shawnyxiao.github.io/" target="_blank" rel="noopener">https://shawnyxiao.github.io/</a> &gt;</li><li>&lt;<a href="http://www.barretlee.com" target="_blank" rel="noopener">www.barretlee.com</a> &gt;</li><li>峰华 &lt;<a href="https://www.zxuqian.cn/" target="_blank" rel="noopener">https://www.zxuqian.cn/</a> &gt;</li><li>&lt;<a href="https://singsing.io/blog/" target="_blank" rel="noopener">https://singsing.io/blog/</a> &gt;</li><li>追梦子 &lt;<a href="https://www.cnblogs.com/pssp/" target="_blank" rel="noopener">https://www.cnblogs.com/pssp/</a> &gt;</li><li>&lt;<a href="https://yonghaowu.github.io/archives/" target="_blank" rel="noopener">https://yonghaowu.github.io/archives/</a> &gt;</li><li>&lt;<a href="https://haoji.me/" target="_blank" rel="noopener">https://haoji.me/</a> &gt;</li></ul><h3 id="个人网站"><a class="header-anchor" href="#个人网站">🌘</a>个人网站</h3><ul><li>&lt;<a href="http://www.liaoxuefeng.com" target="_blank" rel="noopener">www.liaoxuefeng.com</a>&gt;</li><li>稚晖君 &lt;<a href="http://www.pengzhihui.com" target="_blank" rel="noopener">http://www.pengzhihui.com</a> &gt;</li><li>&lt;<a href="https://www.theickabog.com/" target="_blank" rel="noopener">https://www.theickabog.com/</a> &gt;</li><li>&lt;<a href="http://codewithzhangyi.com" target="_blank" rel="noopener">codewithzhangyi.com</a>&gt;</li><li>&lt;<a href="http://daluozha.cn" target="_blank" rel="noopener">daluozha.cn</a>&gt;</li><li>&lt;<a href="http://pluskid.org" target="_blank" rel="noopener">pluskid.org</a>&gt;  &amp; &lt;<a href="http://freemind.pluskid.org" target="_blank" rel="noopener">freemind.pluskid.org</a>&gt;</li><li>&lt;<a href="https://www.taniarascia.com/" target="_blank" rel="noopener">https://www.taniarascia.com/</a> &gt;</li><li>&lt;<a href="https://wocai.de/" target="_blank" rel="noopener">https://wocai.de/</a> &gt;</li><li>&lt;<a href="https://diygod.me/" target="_blank" rel="noopener">https://diygod.me/</a> &gt;</li><li>&lt;<a href="https://molunerfinn.com/" target="_blank" rel="noopener">https://molunerfinn.com/</a> &gt;</li><li>&lt;<a href="https://zxuqian.cn/" target="_blank" rel="noopener">https://zxuqian.cn/</a> &gt;</li><li>&lt;<a href="https://antfu.me/" target="_blank" rel="noopener">https://antfu.me/</a> &gt; &amp; &lt;<a href="https://100.antfu.me/" target="_blank" rel="noopener">https://100.antfu.me/</a> &gt;</li><li>&lt;<a href="https://yating.world/" target="_blank" rel="noopener">https://yating.world/</a> &gt;</li><li>&lt;<a href="https://www.leoku.top/" target="_blank" rel="noopener">https://www.leoku.top/</a> &gt;</li><li>&lt;<a href="https://ashita.top/" target="_blank" rel="noopener">https://ashita.top/</a> &gt;</li><li>&lt;<a href="https://geekplux.com/" target="_blank" rel="noopener">https://geekplux.com/</a> &gt;</li><li>&lt;<a href="https://jaapgrolleman.com/on-china/" target="_blank" rel="noopener">https://jaapgrolleman.com/on-china/</a> &gt;</li></ul><h3 id="学习资料"><a class="header-anchor" href="#学习资料">🌘</a>学习资料</h3><ul><li>莫烦 Python &lt;<a href="https://morvanzhou.github.io" target="_blank" rel="noopener">https://morvanzhou.github.io</a> &gt;</li><li>&lt;<a href="http://how2j.cn" target="_blank" rel="noopener">how2j.cn</a>&gt;</li><li>doyoudo &lt;<a href="http://www.doyoudo.com" target="_blank" rel="noopener">www.doyoudo.com</a>&gt;</li><li>Crash Course &lt;<a href="https://crashcourse.club" target="_blank" rel="noopener">https://crashcourse.club</a> &gt;</li><li>开源组织 Datawhale &lt;<a href="https://datawhale.club" target="_blank" rel="noopener">https://datawhale.club</a> &gt;</li><li>CodingStartup 起码课 &lt;<a href="https://www.codingstartup.com/" target="_blank" rel="noopener">https://www.codingstartup.com/</a> &gt;</li><li>中文文案排版指北 &lt;<a href="https://mazhuang.org/wiki/chinese-copywriting-guidelines/" target="_blank" rel="noopener">https://mazhuang.org/wiki/chinese-copywriting-guidelines/</a> &gt;</li><li>freeCodeCamp &lt;<a href="https://learn.freecodecamp.one/" target="_blank" rel="noopener">https://learn.freecodecamp.one/</a> &gt;</li><li>设计模式 &lt;<a href="https://refactoringguru.cn/" target="_blank" rel="noopener">https://refactoringguru.cn/</a> &gt;</li><li>CS-Notes &lt;<a href="https://cyc2018.github.io/CS-Notes/" target="_blank" rel="noopener">https://cyc2018.github.io/CS-Notes/</a> &gt;</li><li>程序员成长指北 &lt;<a href="http://www.inode.club/" target="_blank" rel="noopener">http://www.inode.club/</a> &gt;</li><li>机器学习 &lt;<a href="https://alibaba.github.io/pipcook/#/zh-cn/" target="_blank" rel="noopener">https://alibaba.github.io/pipcook/#/zh-cn/</a> &gt;</li><li>雅思题库 &lt;<a href="https://ieltsonlinetests.com" target="_blank" rel="noopener">https://ieltsonlinetests.com</a> &gt;</li><li>&lt;<a href="https://mtc.nofwl.com/" target="_blank" rel="noopener">https://mtc.nofwl.com/</a> &gt;</li><li>&lt;<a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web</a> &gt;</li><li>知道创宇研发技能表 &lt;<a href="https://rd.readthedocs.io/" target="_blank" rel="noopener">https://rd.readthedocs.io/</a> &gt;</li></ul><h3 id="英文文档"><a class="header-anchor" href="#英文文档">🌘</a>英文文档</h3><ul><li>&lt;<a href="https://fullstackopen.com/en/" target="_blank" rel="noopener">https://fullstackopen.com/en/</a> &gt;</li><li>&lt;<a href="https://javascript.info/" target="_blank" rel="noopener">https://javascript.info/</a> &gt;</li></ul><h3 id="前端相关"><a class="header-anchor" href="#前端相关">🌘</a>前端相关</h3><ul><li>MDN Web &lt;<a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/</a> &gt;</li><li>项目文档汇集 &lt;<a href="https://devdocs.io/" target="_blank" rel="noopener">https://devdocs.io/</a> &gt;</li><li>前端非常规知识总结 &lt;<a href="https://www.jianshu.com/p/364e5f2a009a" target="_blank" rel="noopener">https://www.jianshu.com/p/364e5f2a009a</a> &gt;</li><li>React 教程<ul><li>&lt;<a href="http://www.ruanyifeng.com/blog/2015/03/react.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/03/react.html</a> &gt;</li><li>&lt;<a href="https://www.taniarascia.com/getting-started-with-react/" target="_blank" rel="noopener">https://www.taniarascia.com/getting-started-with-react/</a> &gt;</li></ul></li><li>Flex 布局<ul><li>&lt;<a href="https://nervjs.github.io/taro-flexbox/" target="_blank" rel="noopener">https://nervjs.github.io/taro-flexbox/</a> &gt;</li><li><a href="https://aotu.io/notes/2019/09/25/taro-flex/index.html" target="_blank" rel="noopener">https://aotu.io/notes/2019/09/25/taro-flex/index.html</a></li></ul></li><li>CSS 秘密花园 &lt;<a href="http://www.csszengarden.com/" target="_blank" rel="noopener">http://www.csszengarden.com/</a> &gt;</li><li>TGideas文档库 &lt;<a href="https://tgideas.qq.com/doc/index.html" target="_blank" rel="noopener">https://tgideas.qq.com/doc/index.html</a> &gt;</li><li>Vue 源码 &lt;<a href="https://vue-js.com/learn-vue/" target="_blank" rel="noopener">https://vue-js.com/learn-vue/</a> &gt;</li><li>&lt;<a href="https://pengfeixc.com/tutorial/css/introduction" target="_blank" rel="noopener">https://pengfeixc.com/tutorial/css/introduction</a> &gt;</li></ul><h3 id="javascript"><a class="header-anchor" href="#javascript">🌘</a>JavaScript</h3><ul><li>&lt;<a href="https://javascript.ruanyifeng.com/" target="_blank" rel="noopener">https://javascript.ruanyifeng.com/</a> &gt; &amp; &lt;<a href="http://wangdoc.com/javascript" target="_blank" rel="noopener">wangdoc.com/javascript</a> &gt;</li><li>ES6 &lt;<a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener">https://es6.ruanyifeng.com/</a> &gt;</li><li>现代 JavaScript 教程 &lt;<a href="https://zh.javascript.info/" target="_blank" rel="noopener">https://zh.javascript.info/</a> &gt;</li><li>JavaScript30 &lt;<a href="https://github.com/wesbos/JavaScript30" target="_blank" rel="noopener">https://github.com/wesbos/JavaScript30</a> &gt;</li><li>JavaScript 秘密花园 &lt;<a href="https://bonsaiden.github.io/JavaScript-Garden/zh/" target="_blank" rel="noopener">https://bonsaiden.github.io/JavaScript-Garden/zh/</a> &gt;</li><li>重新介绍 JavaScript &lt;<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript</a> &gt;</li><li>阮一峰的网络日志<ol><li>Javascript 面向对象编程（一）：封装 （如何&quot;封装&quot;数据和方法，以及如何从原型对象生成实例。） &lt;<a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_encapsulation.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_encapsulation.html</a> &gt;</li><li>Javascript 面向对象编程（二）：构造函数的继承 （对象之间的&quot;继承&quot;的五种方法。） &lt;<a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html</a> &gt;</li><li>Javascript 面向对象编程（三）：非构造函数的继承 （不使用构造函数实现&quot;继承&quot;。） &lt;<a href="https://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html" target="_blank" rel="noopener">https://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html</a> &gt;</li></ol></li><li>TypeScript &lt;<a href="https://www.tslang.cn/docs/home.html" target="_blank" rel="noopener">https://www.tslang.cn/docs/home.html</a> &gt;</li><li>TypeScript 入门教程 &lt;<a href="https://juejin.cn/post/6844904182843965453" target="_blank" rel="noopener">https://juejin.cn/post/6844904182843965453</a> &gt;</li><li>TypeScript Playground &lt;<a href="https://www.typescriptlang.org/play/" target="_blank" rel="noopener">https://www.typescriptlang.org/play/</a> &gt;</li></ul><h3 id="free-api"><a class="header-anchor" href="#free-api">🌘</a>Free API</h3><ul><li>&lt;<a href="https://thecatapi.com/" target="_blank" rel="noopener">https://thecatapi.com/</a> &gt;</li><li>&lt;<a href="https://dog.ceo/dog-api/" target="_blank" rel="noopener">https://dog.ceo/dog-api/</a> &gt;</li></ul><h3 id="ui-库"><a class="header-anchor" href="#ui-库">🌘</a>UI 库</h3><ul><li>&lt;<a href="https://undraw.co/illustrations" target="_blank" rel="noopener">https://undraw.co/illustrations</a> &gt;</li><li>&lt;<a href="https://emilkowalski.github.io/css-effects-snippets/" target="_blank" rel="noopener">https://emilkowalski.github.io/css-effects-snippets/</a> &gt;</li><li>&lt;<a href="https://element-plus.gitee.io/#/zh-CN" target="_blank" rel="noopener">https://element-plus.gitee.io/#/zh-CN</a> &gt;</li></ul><h3 id="git"><a class="header-anchor" href="#git">🌘</a>Git</h3><ul><li>Git 命令学习 &lt;<a href="https://oschina.gitee.io/learn-git-branching/" target="_blank" rel="noopener">https://oschina.gitee.io/learn-git-branching/</a> &gt;</li><li>&lt;<a href="https://backlog.com/git-tutorial/cn/" target="_blank" rel="noopener">https://backlog.com/git-tutorial/cn/</a> &gt;</li></ul><h3 id="算法相关"><a class="header-anchor" href="#算法相关">🌘</a>算法相关</h3><ul><li>&lt;<a href="https://labuladong.gitbook.io/" target="_blank" rel="noopener">https://labuladong.gitbook.io/</a> &gt;</li><li>&lt;<a href="https://books.halfrost.com/leetcode/" target="_blank" rel="noopener">https://books.halfrost.com/leetcode/</a> &gt;</li><li>&lt;<a href="https://www.geekxh.com/" target="_blank" rel="noopener">https://www.geekxh.com/</a> &gt;</li><li>&lt;<a href="https://greyireland.gitbook.io/algorithm-pattern/" target="_blank" rel="noopener">https://greyireland.gitbook.io/algorithm-pattern/</a> &gt;</li><li>leetcode 探索卡片 &lt;<a href="https://leetcode-cn.com/explore/" target="_blank" rel="noopener">https://leetcode-cn.com/explore/</a> &gt;</li><li>剑指 offer &lt;<a href="https://leetcode-cn.com/problemset/lcof/" target="_blank" rel="noopener">https://leetcode-cn.com/problemset/lcof/</a> &gt;</li><li>算法可视化 &lt;<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a> &gt;</li><li>排序算法 &lt;<a href="https://www.runoob.com/cprogramming/c-sort-algorithm.html" target="_blank" rel="noopener">https://www.runoob.com/cprogramming/c-sort-algorithm.html</a> &gt;</li></ul><h3 id="有意思的仓库-文章"><a class="header-anchor" href="#有意思的仓库-文章">🌘</a>有意思的仓库/文章</h3><ul><li>&lt;<a href="https://github.com/Kaiyiwing/qwerty-learner" target="_blank" rel="noopener">https://github.com/Kaiyiwing/qwerty-learner</a> &gt;</li><li>给研究生的学术建议 &lt;<a href="https://psychelzh.github.io/phdrule/index.html" target="_blank" rel="noopener">https://psychelzh.github.io/phdrule/index.html</a> &gt;</li></ul><h3 id="库-框架"><a class="header-anchor" href="#库-框架">🌘</a>库 &amp; 框架</h3><ul><li>Vue.js &lt;<a href="https://cn.vuejs.org/" target="_blank" rel="noopener">https://cn.vuejs.org/</a> &gt;</li><li>React.js &lt;<a href="https://zh-hans.reactjs.org/" target="_blank" rel="noopener">https://zh-hans.reactjs.org/</a> &gt;</li><li>Chart.js &lt;<a href="https://www.chartjs.org/" target="_blank" rel="noopener">https://www.chartjs.org/</a> &gt;</li><li>&lt;<a href="https://www.lodashjs.com/" target="_blank" rel="noopener">https://www.lodashjs.com/</a> &gt;</li><li>dayjs &lt;<a href="https://dayjs.fenxianglu.cn/" target="_blank" rel="noopener">https://dayjs.fenxianglu.cn/</a> &gt;</li><li>vite &lt;<a href="https://cn.vitejs.dev/" target="_blank" rel="noopener">https://cn.vitejs.dev/</a>  &gt;</li><li>Three.js &lt;<a href="https://threejsfundamentals.org/threejs/lessons/zh_cn/threejs-fundamentals.html" target="_blank" rel="noopener">https://threejsfundamentals.org/threejs/lessons/zh_cn/threejs-fundamentals.html</a> &gt; &amp; &lt;<a href="https://www.bilibili.com/video/BV1zU4y1L7Go" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1zU4y1L7Go</a> &gt;</li><li>pug.js &lt;<a href="https://pugjs.org/" target="_blank" rel="noopener">https://pugjs.org/</a> &gt;</li><li>matter.js &lt;<a href="https://brm.io/matter-js/" target="_blank" rel="noopener">https://brm.io/matter-js/</a> &gt;</li></ul><h3 id="有趣的网站"><a class="header-anchor" href="#有趣的网站">🌘</a>有趣的网站</h3><ul><li>Google 涂鸦 &lt;<a href="https://www.google.com/doodles" target="_blank" rel="noopener">https://www.google.com/doodles</a> &gt;</li><li>&lt;<a href="https://www.nasa.gov/content/goddard/what-did-hubble-see-on-your-birthday" target="_blank" rel="noopener">https://www.nasa.gov/content/goddard/what-did-hubble-see-on-your-birthday</a> &gt;</li><li>清华美院 2020 届毕业作品展 &lt;<a href="https://exhibition.ad.tsinghua.edu.cn/" target="_blank" rel="noopener">https://exhibition.ad.tsinghua.edu.cn/</a> &gt;</li><li>O’RLY 封面工厂 &lt;<a href="https://orly.nanmu.me/" target="_blank" rel="noopener">https://orly.nanmu.me/</a> &gt;</li><li>Topbook 高效生活视频书 &lt;<a href="https://topbook.cc/" target="_blank" rel="noopener">https://topbook.cc/</a> &gt;</li><li>地图生成器 &lt;<a href="http://datav.aliyun.com/tools/atlas/" target="_blank" rel="noopener">http://datav.aliyun.com/tools/atlas/</a> &gt;</li><li>计算机相关术语发音 &lt;<a href="https://cpwp.netlify.app/" target="_blank" rel="noopener">https://cpwp.netlify.app/</a> &gt;</li><li>&lt;<a href="http://keycode.info/" target="_blank" rel="noopener">http://keycode.info/</a> &gt;</li><li>思源宋体 &lt;<a href="https://source.typekit.com/source-han-serif/cn/" target="_blank" rel="noopener">https://source.typekit.com/source-han-serif/cn/</a> &gt;</li><li>Best of 2020 by NASA &lt;<a href="https://www.flickr.com/photos/nasahqphoto/sets/72157717626776513/" target="_blank" rel="noopener">https://www.flickr.com/photos/nasahqphoto/sets/72157717626776513/</a> &gt;</li><li>&lt;<a href="https://www.allhistory.com/" target="_blank" rel="noopener">https://www.allhistory.com/</a> &gt;</li><li>&lt;<a href="https://rpdc.xiaohongshu.com/52-design-principles" target="_blank" rel="noopener">https://rpdc.xiaohongshu.com/52-design-principles</a> &gt;</li><li>Lorem Ipsum &lt;<a href="https://www.lipsum.com/" target="_blank" rel="noopener">https://www.lipsum.com/</a> &gt;</li><li>&lt;<a href="https://js1k.com/" target="_blank" rel="noopener">https://js1k.com/</a> &gt;</li></ul><h3 id="社区-论坛"><a class="header-anchor" href="#社区-论坛">🌘</a>社区 &amp; 论坛</h3><ul><li>思否 &lt;<a href="https://segmentfault.com/" target="_blank" rel="noopener">https://segmentfault.com/</a> &gt;</li><li>掘金 &lt;<a href="https://juejin.im/" target="_blank" rel="noopener">https://juejin.im/</a> &gt;</li><li>语雀 &lt;<a href="https://www.yuque.com/explore/headlines" target="_blank" rel="noopener">https://www.yuque.com/explore/headlines</a> &gt;</li><li>InfoQ &lt;<a href="https://www.infoq.cn/" target="_blank" rel="noopener">https://www.infoq.cn/</a> &gt;</li><li>牛客 &lt;<a href="https://www.nowcoder.com/" target="_blank" rel="noopener">https://www.nowcoder.com/</a> &gt;</li><li>LeetCode &lt;<a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a> &gt;</li><li>机器之心 &lt;<a href="https://www.jiqizhixin.com/" target="_blank" rel="noopener">https://www.jiqizhixin.com/</a> &gt;</li><li>V2EX &lt;<a href="https://www.v2ex.com/" target="_blank" rel="noopener">https://www.v2ex.com/</a> &gt;</li></ul><h3 id="前端团队"><a class="header-anchor" href="#前端团队">🌘</a>前端团队</h3><ul><li>Alloy Team 腾讯 Web 前端团队 &lt;<a href="http://www.alloyteam.com/" target="_blank" rel="noopener">http://www.alloyteam.com/</a> &gt;</li><li>京东凹凸实验室 &lt;<a href="https://aotu.io/" target="_blank" rel="noopener">https://aotu.io/</a> &gt;</li><li>美团技术团队 &lt;<a href="https://tech.meituan.com/" target="_blank" rel="noopener">https://tech.meituan.com/</a> &gt;</li><li>蚂蚁体验科技 &lt;<a href="https://xcloud.alipay.com/" target="_blank" rel="noopener">https://xcloud.alipay.com/</a> &gt;</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;github-pages&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#github-pages&quot;&gt;🌘&lt;/a&gt;Github Pages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;&lt;a href=&quot;https://www.daluozha.cn/go
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>All About Webpack</title>
    <link href="http://www.daluozha.cn/2021/05/12/All-About-Webpack/"/>
    <id>http://www.daluozha.cn/2021/05/12/All-About-Webpack/</id>
    <published>2021-05-12T08:40:48.000Z</published>
    <updated>2022-05-12T10:10:38.909Z</updated>
    
    <content type="html"><![CDATA[<h3 id="path"><a class="header-anchor" href="#path">🌘</a>path</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path: path.resolve(__dirname, &apos;dist&apos;)</span><br></pre></td></tr></table></figure><p>path.join()<br>path.resolve() 方法将路径或路径片段的序列解析为绝对路径。<br>详见 &lt;<a href="http://nodejs.cn/api/path/path_resolve_paths.html" target="_blank" rel="noopener">http://nodejs.cn/api/path/path_resolve_paths.html</a> &gt;<br>__dirname 详见 &lt;<a href="http://nodejs.cn/api/modules/dirname.html" target="_blank" rel="noopener">http://nodejs.cn/api/modules/dirname.html</a> &gt;</p><h3 id="webpack-优化策略"><a class="header-anchor" href="#webpack-优化策略">🌘</a>Webpack 优化策略</h3><ol><li>优化 loader 配置</li></ol><ul><li>优化正则匹配</li><li>通过 cacheDirectory 选项开启缓存</li><li>通过 include、exclude 来减少被处理的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">      test: /\.js$/,</span><br><span class="line">      loader: &apos;babel-loader?cacheDirectory&apos;,</span><br><span class="line">      include: [resolve(&apos;src&apos;)]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>比较实用的方法:</li></ol><ul><li>按需加载，优化 loader 配置，关闭生产环境的sourceMap，CDN优化。</li><li>vue-cli 已做的优化： 代码压缩，提取公共代码，再优化空间不大。</li><li>根据项目实际需要和自身开发水平选择优化方法，必须避免因为优化产生 bug</li></ul><p>&lt;<a href="https://juejin.cn/post/6844904004825120782" target="_blank" rel="noopener">https://juejin.cn/post/6844904004825120782</a> &gt;<br>&lt;<a href="https://segmentfault.com/a/1190000021693432" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021693432</a> &gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;path&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#path&quot;&gt;🌘&lt;/a&gt;path&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工作中遇过的问题</title>
    <link href="http://www.daluozha.cn/2021/01/22/QnA/"/>
    <id>http://www.daluozha.cn/2021/01/22/QnA/</id>
    <published>2021-01-21T17:03:17.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<h3 id="隐藏文本但保留-css-样式"><a class="header-anchor" href="#隐藏文本但保留-css-样式">🌘</a>隐藏文本但保留 css 样式</h3><ul><li>描述：目的是垫高上面的标签，不会因为下面的标签 if 判断隐藏之后掉下来</li><li>A：用 text-indent（首行缩进的作用）将文本移除：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.hide-text &#123;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  text-indent: 100%;</span><br><span class="line">  white-space: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for-循环指定-index-删除数组元素"><a class="header-anchor" href="#for-循环指定-index-删除数组元素">🌘</a>for 循环指定 index 删除数组元素</h3><ul><li>描述：for in/for of/forEach 都不行，因为删除一个后数组就会更新 index，使得大的 index 就会向前更新变小。</li><li>A：使用逆序遍历，反着来删除：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (let i = delIndex.length - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">  this.$delete(items , delIndex[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="文字过长显示省略号"><a class="header-anchor" href="#文字过长显示省略号">🌘</a>文字过长显示省略号</h3><ul><li><p>描述：</p><ol><li>设置不换行和过多隐藏。</li><li>设置块状元素（block 或者 inline-block）</li></ol></li><li><p>A：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.over-flow&#123; </span><br><span class="line">  text-overflow:ellipsis;</span><br><span class="line">  max-width:450rpx; </span><br><span class="line">  white-space:nowrap; </span><br><span class="line">  overflow:hidden; </span><br><span class="line">  display:inline-block;</span><br><span class="line">  vertical-align:middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新增：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//最多一行显示</span><br><span class="line">.maxline-1 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">    display: -webkit-box;</span><br><span class="line">    -webkit-line-clamp: 1;//显示的文本的行数</span><br><span class="line">    -webkit-box-orient: vertical;//规定框的子元素应该被水平或垂直排列</span><br><span class="line">    word-break: break-all</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//最多两行显示</span><br><span class="line">.maxline-2 &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">    display: -webkit-box;</span><br><span class="line">    -webkit-line-clamp: 2;</span><br><span class="line">    -webkit-box-orient: vertical;</span><br><span class="line">    word-break: break-all</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="icon-只在边际地方点击触发"><a class="header-anchor" href="#icon-只在边际地方点击触发">🌘</a>icon 只在边际地方点击触发</h3><ul><li><p>描述：用于删除的 icon 点击正中心没反应，只在边际地方能触发</p></li><li><p>A：后面的元素设置了 position:relative 导致它们之间产生了堆叠上下文。加上它们的 z-index 都是 auto，使得后面的元素自动覆盖在 icon 上面，因此点不到正中心。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.item-delete&#123;</span><br><span class="line">  ...</span><br><span class="line">  /* z-index:auto 会导致 item-delete 被后面的覆盖，点击不了 */</span><br><span class="line">  z-index: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在条件语句中直接判断"><a class="header-anchor" href="#在条件语句中直接判断">🌘</a>在条件语句中直接判断</h3><p>描述：如果 x 是 undefine , null , false , &quot; &quot; , 0 或 NaN ,它将保持不变</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var o=&#123;&#125;;</span><br><span class="line">if(o.x) o.x+=1;</span><br></pre></td></tr></table></figure><h3 id="将数组中某个元素放在首位"><a class="header-anchor" href="#将数组中某个元素放在首位">🌘</a>将数组中某个元素放在首位</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">let values = [1, 3, 5, 7, 12, 10];</span><br><span class="line">let value = 12;  //需要置于首位的元素</span><br><span class="line">let index = values.indexOf(12);</span><br><span class="line">if(index) &#123;</span><br><span class="line">      let first = values.splice(index , 1)[0];</span><br><span class="line">      values.unshift(first);</span><br><span class="line"> &#125;</span><br><span class="line"> console.log(values);</span><br><span class="line"> //输出 [12, 1, 3, 5, 7, 10 ]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;隐藏文本但保留-css-样式&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#隐藏文本但保留-css-样式&quot;&gt;🌘&lt;/a&gt;隐藏文本但保留 css 样式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;描述：目的是垫高上面的标签，不会因为下面的标签 if 判断隐藏之后
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DFS &amp; BFS</title>
    <link href="http://www.daluozha.cn/2020/06/02/DFSnBFS/"/>
    <id>http://www.daluozha.cn/2020/06/02/DFSnBFS/</id>
    <published>2020-06-01T16:07:39.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<p>举一个例子加以说明：leetcode 102 - 二叉树的层次遍历 <a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/binary-tree-level-order-traversal/</a></p><h2 id="深度优先搜索-depth-first-search"><a class="header-anchor" href="#深度优先搜索-depth-first-search">🌘</a>深度优先搜索 Depth First Search</h2><p>dfs 递归，回溯</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var levelOrder = function(root) &#123;</span><br><span class="line">    if(!root) return []</span><br><span class="line">    let result = []</span><br><span class="line">    dfs(root, 0, result)</span><br><span class="line">    return result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function dfs(node, step, result)&#123;</span><br><span class="line">    if(node)&#123;</span><br><span class="line">        if(!result[step]) result[step] = []</span><br><span class="line">        result[step].push(node.val)</span><br><span class="line">        dfs(node.left, step + 1, result)</span><br><span class="line">        dfs(node.right, step + 1, result)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="广度优先搜索-breadth-first-search"><a class="header-anchor" href="#广度优先搜索-breadth-first-search">🌘</a>广度优先搜索 Breadth First Search</h2><p>bfs 维护队列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var levelOrder = function(root) &#123;</span><br><span class="line">    if(!root) return []</span><br><span class="line">    let queue = [root], result = []</span><br><span class="line">    while(queue.length)&#123;</span><br><span class="line">        // 因为队列的长度是动态变化的，所以要将本层要遍历的次数先赋值出来</span><br><span class="line">        let cursize = queue.length, arr = []</span><br><span class="line">        while(cursize)&#123;</span><br><span class="line">            let cur = queue.shift()</span><br><span class="line">            arr.push(cur.val)</span><br><span class="line">            cur.left &amp;&amp; queue.push(cur.left)</span><br><span class="line">            cur.right &amp;&amp; queue.push(cur.right)</span><br><span class="line">            cursize--</span><br><span class="line">        &#125;</span><br><span class="line">        result.push(arr)</span><br><span class="line">    &#125;</span><br><span class="line">    return result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;举一个例子加以说明：leetcode 102 - 二叉树的层次遍历 &lt;a href=&quot;https://leetcode-cn.com/problems/binary-tree-level-order-traversal/&quot; target=&quot;_blank&quot; rel=&quot;noop
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://www.daluozha.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Flex 布局</title>
    <link href="http://www.daluozha.cn/2020/05/24/css-flex/"/>
    <id>http://www.daluozha.cn/2020/05/24/css-flex/</id>
    <published>2020-05-24T08:30:29.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<!-- 前言： --><h3 id="flex-container"><a class="header-anchor" href="#flex-container">🌘</a>Flex Container</h3><ol><li>flex-direction: row,column,row-reverse,column-reverse 。当 row 时，main-axis（主轴）就是 row 、cross-axis（交叉轴）是 column。</li><li>justify-content &amp; align-items: 设定主轴 &amp; 交叉轴的排序方向。有 center、flex-start、flex-end</li><li>flex-wrap: 设定flex-items是否分行。有 nowrap、wrap</li><li>flex-flow = flex-direction + flex-wrap</li><li>align-content: 当 flex-wrap为 wrap 并且有多于一行的 flex-items 时，设定行与行之间的对齐方式。有flex-start、flex-end、center、space-around（左右都有相同的空间隔开）、space-evenly（之间有相同的间距）、space-between（之间有相同间距，但是取消最左和最右的空间）。</li></ol><h3 id="flex-item"><a class="header-anchor" href="#flex-item">🌘</a>Flex Item</h3><ol><li>order: 调整 flex-items 的排序位置，预设值为0，根据 order 由小到大排列。注意：flex-items 在 HTML 内的位置并不代表最终显示的位置，因为 order 可以随意将个别 flex-item 的位置改变。</li><li>align-self: 用于覆写 flex-container 的 align-items 设定。</li><li>flex-basis: 设定 flex-item 主轴方向上的大小。在设定 flex-basis 之后，原有的宽度或者高度设定就会失效，改为按照 flex-basis 的设定值去计算。设定为 0 则等同于 width 是 0 的效果，只要容器本身没有 overflow:hidden 的设定，即等于它的大小取决于内容的大小。设定为 auto 则代表按照本身原有宽度或者高度的大小去计算</li><li>flex-grow: 当 flex-container 主轴方向有剩余空间的时候，flex-item 沿主轴方向扩大的设定。设定为数值，是 flex-item 占几份的意思，分母是剩余空间的大小；0表示保持原有的大小不扩大。</li><li>flex-shrink: 与 flex-grow 相反，是指 flex-item 主轴方向的大小总和超出了 flex-container 的时候，flex-item 沿主轴方向怎样缩小的设定。设定为数值，表示各自分担几份被缩小的空间，分母是超出空间的大小；0表示不缩小。</li><li>flex = ( flex-grow + flex-shrink + flex-basis )</li></ol><h3 id="本文参考-https-www-bilibili-com-video-bv1qj411n7ta-感谢-coding-startup-🤗"><a class="header-anchor" href="#本文参考-https-www-bilibili-com-video-bv1qj411n7ta-感谢-coding-startup-🤗">🌘</a>本文参考 <a href="https://www.bilibili.com/video/BV1qJ411N7TA" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1qJ411N7TA</a> ，感谢 Coding Startup 🤗</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- 前言： --&gt;
&lt;h3 id=&quot;flex-container&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#flex-container&quot;&gt;🌘&lt;/a&gt;Flex Container&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;flex-direction: row,
      
    
    </summary>
    
    
      <category term="CSS3" scheme="http://www.daluozha.cn/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>千牛小程序实现表格</title>
    <link href="http://www.daluozha.cn/2020/05/16/qap-sheet/"/>
    <id>http://www.daluozha.cn/2020/05/16/qap-sheet/</id>
    <published>2020-05-15T17:01:18.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<h3 id="小程序文档"><a class="header-anchor" href="#小程序文档">🌘</a>小程序文档</h3><ul><li><p>&lt;<a href="https://opendocs.alipay.com/mini/framework" target="_blank" rel="noopener">https://opendocs.alipay.com/mini/framework</a> &gt;</p></li><li><p>商家应用开发文档 &lt;<a href="https://miniapp.open.taobao.com/docV3.htm?docId=117323&amp;docType=1&amp;qq-pf-to=pcqq.temporaryc2c&amp;tag=dev" target="_blank" rel="noopener">https://miniapp.open.taobao.com/docV3.htm?docId=117323&amp;docType=1&amp;qq-pf-to=pcqq.temporaryc2c&amp;tag=dev</a> &gt;</p></li><li><p>小程序的核心是一个响应式的数据绑定系统，分为视图层和逻辑层。这两层始终保持同步，只要在逻辑层修改数据，视图层就会相应的更新。</p></li><li><p>关掉自动刷新，重新进入页面的时候，在不重新编译的情况下，axml 文件改动过的内容能生效（包括页面的 { { } } js 代码），js 文件的不能生效。</p></li></ul><h3 id="实现表格的两种-css-方式"><a class="header-anchor" href="#实现表格的两种-css-方式">🌘</a>实现表格的两种 css 方式</h3><h4 id="flex布局"><a class="header-anchor" href="#flex布局">🌘</a>flex布局</h4><p>axml：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">"panel"</span> <span class="attr">class</span>=<span class="string">"flex-column"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"flex-row flex-cell"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"flex-row flex-cell"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"flex-row flex-cell"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"flex-row flex-cell"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"flex-cell flex-row"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>acss：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#panel</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">65vh</span>;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#panel</span> <span class="selector-tag">text</span>&#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">13vh</span>;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1</span>rpx solid <span class="number">#ddd</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1</span>rpx solid <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex-row</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex-column</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: stretch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flex-cell</span>&#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="https://gitee.com/daluozha/luozha/raw/master/img/20200721004006.png" alt=""></p><h4 id="table"><a class="header-anchor" href="#table">🌘</a>table</h4><p>axml：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-tr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-th"</span>&gt;</span>省份/直辖市<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-th"</span>&gt;</span>GDP<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-th"</span>&gt;</span>增长率<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-tr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>广东<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>72812456<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>8.0%<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-tr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>河南<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>37010<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>8.3%<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-tr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>江苏<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>70116<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"table-td"</span>&gt;</span>8.5%<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>acss：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.table</span>, <span class="selector-class">.table</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.table</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    border-collapse: collapse; //合并边框</span><br><span class="line">    <span class="selector-tag">box-sizing</span>: <span class="selector-tag">border-box</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.table-tr</span> &#123;</span><br><span class="line">    display: table-row; //此元素会作为一个表格行显示（类似 &lt;tr&gt;）</span><br><span class="line">    <span class="selector-tag">height</span>: 92<span class="selector-tag">rpx</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.table-th</span> &#123;</span><br><span class="line">    display: table-cell; //此元素会作为一个表格单元格显示（类似 &lt;td&gt; 和 &lt;th&gt;）</span><br><span class="line">    <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>;</span><br><span class="line">    <span class="selector-tag">border</span>: 1<span class="selector-tag">rpx</span> <span class="selector-tag">solid</span> <span class="selector-tag">gray</span>;</span><br><span class="line">    <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">    <span class="selector-tag">vertical-align</span>: <span class="selector-tag">middle</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.table-td</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1</span>rpx solid gray;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="https://gitee.com/daluozha/luozha/raw/master/img/20200721004005.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;小程序文档&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#小程序文档&quot;&gt;🌘&lt;/a&gt;小程序文档&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;&lt;a href=&quot;https://opendocs.alipay.com/mini/framework&quot;
      
    
    </summary>
    
    
      <category term="CSS3" scheme="http://www.daluozha.cn/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>FE 基础知识</title>
    <link href="http://www.daluozha.cn/2020/05/11/FE-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://www.daluozha.cn/2020/05/11/FE-基础知识/</id>
    <published>2020-05-10T17:30:47.000Z</published>
    <updated>2022-05-15T02:53:30.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="html-文档加载过程"><a class="header-anchor" href="#html-文档加载过程">🌘</a>HTML 文档加载过程</h2><p>&lt;<a href="https://www.jianshu.com/p/16435ba1b32e" target="_blank" rel="noopener">https://www.jianshu.com/p/16435ba1b32e</a> &gt;</p><h2 id="事件模型"><a class="header-anchor" href="#事件模型">🌘</a>事件模型</h2><p>&lt;<a href="https://www.jianshu.com/p/dcee13943ede" target="_blank" rel="noopener">https://www.jianshu.com/p/dcee13943ede</a> &gt;<br>&lt;<a href="https://segmentfault.com/a/1190000018977590" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018977590</a> &gt;</p><h2 id="uri-和-url-的区别"><a class="header-anchor" href="#uri-和-url-的区别">🌘</a>URI 和 URL 的区别</h2><p>&lt;<a href="https://www.zhihu.com/question/21950864" target="_blank" rel="noopener">https://www.zhihu.com/question/21950864</a> &gt;</p><h2 id="es6-模块与-commonjs-模块的差异"><a class="header-anchor" href="#es6-模块与-commonjs-模块的差异">🌘</a>ES6 模块与 CommonJS 模块的差异</h2><p>&lt;<a href="https://wangdoc.com/es6/module-loader.html" target="_blank" rel="noopener">https://wangdoc.com/es6/module-loader.html</a> &gt;</p><h2 id="手写题"><a class="header-anchor" href="#手写题">🌘</a>手写题</h2><ul><li>手写instanceof</li><li>实现数组的map方法</li><li>reduce实现数组的map方法</li><li>手写数组的reduce方法</li><li>数组扁平化</li><li>函数柯里化</li><li>浅拷贝实现</li><li>深拷贝实现</li><li>手写call/apply/bind</li><li>手动实现new</li><li>手写promise(常考promise.all, promise.race))</li><li>手写原生AJAX</li><li>手写节流防抖函数</li><li>手写Promise加载图片</li><li>实现事件订阅发布(eventBus)</li></ul><p>&lt;<a href="https://daijl.cn/51568/" target="_blank" rel="noopener">https://daijl.cn/51568/</a> &gt;<br>&lt;<a href="https://daijl.cn/39558/" target="_blank" rel="noopener">https://daijl.cn/39558/</a> &gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;html-文档加载过程&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#html-文档加载过程&quot;&gt;🌘&lt;/a&gt;HTML 文档加载过程&lt;/h2&gt;
&lt;p&gt;&amp;lt;&lt;a href=&quot;https://www.jianshu.com/p/16435ba1b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git 学习</title>
    <link href="http://www.daluozha.cn/2019/05/21/git-learning/"/>
    <id>http://www.daluozha.cn/2019/05/21/git-learning/</id>
    <published>2019-05-20T17:17:26.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分支获取另一分支的更新"><a class="header-anchor" href="#分支获取另一分支的更新">🌘</a>分支获取另一分支的更新</h3><p>以xxx分支获取master的更新为例：</p><ol><li>git checkout master</li><li>git pull</li><li>git checkout xxx（自己的分支</li><li>git merge master</li><li>git push origin xxx</li></ol><h3 id="ambiguous-警告"><a class="header-anchor" href="#ambiguous-警告">🌘</a>Ambiguous 警告</h3><p>跟v1.1.0合并的时候遇到了:</p><blockquote><p>warning: refname ‘v1.1.0’ is ambiguous.<br>Switched to branch ‘v1.1.0’</p></blockquote><ul><li><p>原因：branch 跟 tag 有重名</p></li><li><p>解决方案：改掉本地的分支名</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m v1.1.0 local_v1.1.0</span><br></pre></td></tr></table></figure><ul><li>相关 git 命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git branch -m 旧分支名 新分支名 </span><br><span class="line">//重命名</span><br><span class="line"></span><br><span class="line">git branch -M 旧分支名 新分支名</span><br><span class="line">//如果新分支名已存在，进行强制覆盖</span><br><span class="line"></span><br><span class="line">git branch -D 分支名</span><br><span class="line">//删除</span><br></pre></td></tr></table></figure><h3 id="git-revert-和-git-reset-的区别"><a class="header-anchor" href="#git-revert-和-git-reset-的区别">🌘</a>git revert 和 git reset 的区别</h3><ul><li>git revert 是用一次新的 commit 来回滚之前的 commit，git reset 是直接删除指定的 commit。</li><li>在回滚这一操作上看，效果差不多。但是在日后继续merge以前的老版本时有区别。因为git revert是用一次逆向的commit“中和”之前的提交，因此日后合并老的branch时，导致这部分改变不会再次出现，但是git reset是之间把某些commit在某个branch上删除，因而和老的branch再次merge时，这些被回滚的commit应该还会被引入。</li><li>git reset 是把HEAD向后移动了一下，而git revert是HEAD继续前进，只是新的commit的内容和要revert的内容正好相反，能够抵消要被revert的内容。</li></ul><h3 id="分支命令"><a class="header-anchor" href="#分支命令">🌘</a>分支命令</h3><p>Git鼓励大量使用分支：</p><ul><li>查看分支：git branch</li><li>创建分支：git branch &lt;name&gt;</li><li>切换分支：git checkout &lt;name&gt; 或者 git switch &lt;name&gt;</li><li>创建+切换分支：git checkout -b &lt;name&gt; 或者 git switch -c &lt;name&gt;</li><li>合并某分支到当前分支：git merge &lt;name&gt;</li><li>删除分支：git branch -d &lt;name&gt;</li><li>分支追踪：git branch -vv</li></ul><h3 id="获取远程分支到本地"><a class="header-anchor" href="#获取远程分支到本地">🌘</a>获取远程分支到本地</h3><ol><li>在本地新建分支 x，并自动切换到该本地分支 x。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 本地分支名x origin/远程分支名x</span><br></pre></td></tr></table></figure><ol start="2"><li>在本地新建分支 x，但是不会自动切换到该本地分支 x，需要手动 checkout。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin 远程分支名x:本地分支名x</span><br></pre></td></tr></table></figure><h3 id="设定-upstream"><a class="header-anchor" href="#设定-upstream">🌘</a>设定 upstream</h3><ul><li>-u 等同于 --set-upstream</li><li>例子：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin feature/pre_release_batch_tool_20200702</span><br></pre></td></tr></table></figure><h3 id="git-stash"><a class="header-anchor" href="#git-stash">🌘</a>git stash</h3><ul><li>git stash</li><li>git stash list</li><li>git stash pop</li><li>git stash apply</li><li>git stash show -p</li></ul><h3 id="一些命令"><a class="header-anchor" href="#一些命令">🌘</a>一些命令</h3><ul><li>git更新</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><ul><li>git上传</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m &quot;  &quot;</span><br><span class="line"></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><ul><li>git终端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CTRL+C // 中断</span><br><span class="line"></span><br><span class="line">CTRL+D // 退出</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;分支获取另一分支的更新&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#分支获取另一分支的更新&quot;&gt;🌘&lt;/a&gt;分支获取另一分支的更新&lt;/h3&gt;
&lt;p&gt;以xxx分支获取master的更新为例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;git checkout m
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>排序、时间复杂度、空间复杂度</title>
    <link href="http://www.daluozha.cn/2019/02/08/SAnComplexity/"/>
    <id>http://www.daluozha.cn/2019/02/08/SAnComplexity/</id>
    <published>2019-02-08T08:56:27.000Z</published>
    <updated>2022-04-20T09:48:51.709Z</updated>
    
    <content type="html"><![CDATA[<h2 id="排序"><a class="header-anchor" href="#排序">🌘</a>排序</h2><p>&lt;<a href="https://www.runoob.com/w3cnote/ten-sorting-algorithm.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/ten-sorting-algorithm.html</a> &gt;</p><ul><li><strong>插入排序</strong>：<em>军训排队在已经排好了一个纵队的时候，有人要临时加入到这个队里来，于是教官大声喊道：“新来的，迅速找到你的位置，入队！”于是新来的插入到这个队伍的合适位置中。</em><ul><li><p>直接插入排序</p><ul><li>每趟将一个待排序的关键字按照其值的大小插入到已经排好的部分有序序列的适当位置上，直到所有待排关键字都被插入到有序序列中为止。</li><li>时间复杂度最好<strong>O(n)</strong>，最坏<strong>O(n^2)</strong></li><li>空间复杂度<strong>O(1)</strong></li></ul></li><li><p>折半插入排序</p><ul><li>折半查找法的一个基本条件是序列已经有序。</li><li>时间复杂度最好<strong>O(nlog2n)</strong>，最坏<strong>O(n^2)</strong></li><li>空间复杂度<strong>O(1)</strong></li></ul></li><li><p>希尔排序（缩小增量排序）</p><ul><li><p>&lt;<a href="https://www.runoob.com/w3cnote/shell-sort.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/shell-sort.html</a> &gt;</p></li><li><p>时间复杂度<strong>O(n<sup>1.5)**或者**O(n</sup>2)</strong></p></li><li><p>空间复杂度<strong>O(1)</strong></p></li></ul></li></ul></li></ul><ul><li><strong>交换排序</strong>：<ul><li><p>起泡排序：<em>军训刚刚开始，一群学生要排队，教官说：“你比你旁边的高，你俩换一下。怎么换完还比下一个高？继续换······”最后这个同学将被换到最终合适的位置。</em></p><ul><li>时间复杂度<strong>O(n^2)</strong></li><li>空间复杂度<strong>O(1)</strong></li></ul></li><li><p>快速排序</p><ul><li><p>&lt;<a href="http://data.biancheng.net/view/117.html" target="_blank" rel="noopener">http://data.biancheng.net/view/117.html</a> &gt;</p></li><li><p>时间复杂度最好<strong>O(nlog2n)</strong>，最坏<strong>O(n^2)</strong></p></li><li><p>空间复杂度<strong>O(log2n)</strong>，快速排序是递归进行的，递归需要栈的辅助，因为它需要的辅助空间比前面几类排序算法大。</p></li></ul></li></ul></li></ul><ul><li><strong>选择排序</strong>：<em>军训排队的时候，教官说：“你们都站着别动，我看谁个子最小。”然后教官选出个子最小的同学，说：“第一个位置是你的了，你和第一个同学换一下，剩下的同学我继续选。”</em><ul><li><p>简单选择排序</p><ul><li>时间复杂度最好<strong>O(nlog2n)</strong>，最坏<strong>O(n^2)</strong></li><li>空间复杂度<strong>O(1)</strong></li></ul></li><li><p>堆排序</p></li></ul></li></ul><ul><li><p><strong>归并排序</strong>：将两个或两个以上的有序序列合并成一个新的有序序列。</p><ul><li>二路归并排序：<em>继续排队，这次教官想了个特别的方法，他说：“你们每个人，先和旁边的人组成二人组，二人组内部先排好。”看到大家排好了，继续说：“二人组和旁边的二人组继续组合成一个四人组，每个四人组内部排好，动作快！”这样不停排下去，最后全部学生都归并到一个组中，同时也就排好序了。</em></li></ul></li></ul><ul><li><strong>基数排序</strong>：最特别的一类，基于多关键字排序的思想，把一个逻辑关键字拆分成多个关键字，与前面的思想完全不同（前面都是要进行“比较”和&quot;移动&quot;这两个操作）。<em>例如，对一副去掉大小王的52张扑克牌进行基数排序，可以先按花色排序（如按红桃、黑桃、方片和梅花的顺序），这样就分成了4堆，然后每一堆再按照从A到K的顺序，排序使这副牌最终有序。</em></li></ul><h2 id="时间复杂度"><a class="header-anchor" href="#时间复杂度">🌘</a>时间复杂度</h2><ul><li>“大 O 表示法”：算法的渐进时间复杂度</li></ul><p><strong>T(n) = O(f(n))</strong></p><p>其中，T(n) 就是代码的渐进时间复杂度，<br>f(n) 是代码的执行次数，<br>n 称为问题的规模，例如要处理的数组元素的个数为 n</p><ul><li>常见的时间复杂度的代码：</li></ul><p>O(1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int x = 0 , y = 0;</span><br><span class="line">int temp =x;</span><br><span class="line">x = y;</span><br><span class="line">y = temp;</span><br></pre></td></tr></table></figure><hr><p>O(n)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 1;i &lt;= n;i++)&#123;</span><br><span class="line">  x++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>O(logn)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int i = 1;</span><br><span class="line">while(i &lt; n)&#123;</span><br><span class="line">  i = i * 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>O(nlogn)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 0;i &lt;= n;i++)&#123;</span><br><span class="line">  int x = 1;</span><br><span class="line">  while( x&lt;n )&#123;</span><br><span class="line">    x = x * 2;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>O(n^2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 1;i &lt;= n;i++)&#123;</span><br><span class="line">  for(int j = 1;j &lt;= n;j++)&#123;</span><br><span class="line">    x++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>O(nm)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(int i = 1;i &lt;= n;i++)&#123;</span><br><span class="line">  for(int j = 1;j &lt;= m;j++)&#123;</span><br><span class="line">    x++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="空间复杂度"><a class="header-anchor" href="#空间复杂度">🌘</a>空间复杂度</h2><ul><li>空间复杂度：内存空间增长的趋势</li><li>常用的空间复杂度：</li></ul><p>O(1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int x = 0,y = 0;</span><br><span class="line">x++;</span><br><span class="line">y++;</span><br></pre></td></tr></table></figure><hr><p>O(n)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//数组</span><br><span class="line">int[] newArray = new int[n];</span><br><span class="line">for (int i = 0;i &lt; n;i++)&#123;</span><br><span class="line">  newArray[n] = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>O(n^2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//二维数组</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;排序&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#排序&quot;&gt;🌘&lt;/a&gt;排序&lt;/h2&gt;
&lt;p&gt;&amp;lt;&lt;a href=&quot;https://www.runoob.com/w3cnote/ten-sorting-algorithm.html&quot; tar
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://www.daluozha.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
